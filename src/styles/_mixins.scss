@import "./_variables.scss";

// convert to px to rem
@function toRem($value) {
    $remValue: ($value / 16) + rem;
    @return $remValue;
}

// 텍스트 설정 
@mixin set-text($fontWeight, $fontSize, $fontColor, $fontShadowColor:false, $subFont:false ) {
   font-weight: $fontWeight;
   font-size: toRem($fontSize);
   color: $fontColor;
   @if $fontShadowColor {
     text-shadow: 0 0 1px $fontShadowColor;
  }
  @if $subFont {
    font-family: $sub-font-family;
  }
}

// 박스 그림자 
@mixin box-shadow($top, $left, $blur, $size, $color, $inset: false) {
    @if $inset {
        -webkit-box-shadow:inset $top $left $blur $size $color;
        -moz-box-shadow:inset $top $left $blur $size $color;
        box-shadow:inset $top $left $blur $size $color;
    } @else {
        -webkit-box-shadow: $top $left $blur $size $color;
        -moz-box-shadow: $top $left $blur $size $color;
        box-shadow: $top $left $blur $size $color;
    }
}

// 라운드 
@mixin rounded($radius: 0.5em) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

// 스크롤 
@mixin scroll() {
    &::-webkit-scrollbar {
      width: $scroll-width;
    }
    &::-webkit-scrollbar-thumb {
      height: $scroll-height;
      background-color: $scroll-background-color;
      border-radius: $scroll-border-radius;
    }
}

// 박스 
@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}

// 플렉스 컬럼
@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// 플렉스 가운데 정렬
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

// 플렉스 컬럼 가운데 정렬
@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

// 플렉스 세로 가운데 정렬
@mixin flex-center-vert {
  display: flex;
  align-items: center;
}

// 플렉스 가로 가운데 정렬
@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}

// 폰트 페이스 
@mixin font-face($font-name, $path, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($path+".eot");
    src: url($path+".eot?#iefix") format("embedded-opentype"), url($path+".woff")
        format("woff"), url($path+".ttf") format("truetype"), url($path+".svg##{$font-name}")
        format("svg");
    font-weight: $weight;
    font-style: $style;
  }
}

// 백그라운드 커버
@mixin cover-background {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

// 페이드 인 & 아웃
@mixin fade($type) {
  @if $type== "hide" {
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s, opacity 1s;
  } @else if $type== "show" {
    visibility: visible;
    opacity: 1;
    transition: visibility 1s, opacity 1s;
  }
}

// 트랜지션
@mixin transition($x...){
  -webkit-transition: $x;
  -moz-transition: $x;
  -ms-transition: $x;
  -o-transition: $x;
  transition: $x;
}

// 트랜스폼
@mixin transform($x...) {
  -webkit-transition: $x;
  -moz-transition: $x;
  -ms-transition: $x;
  -o-transition: $x;
  transform: $x;
}

// ellipsis (...스타일)
@mixin one-line-ellipsis($width: 100%) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    width: $width;
}


// 팝업 시 버튼 스타일
@mixin popup-buttons($className:'', $addClass:false) {
  .#{$className}__button-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    .#{$className}--button {
      border-radius: 100px;
      width: 114px;
      margin-top: 40px;
      margin-bottom: 25px;
      background-color: #fff !important;
      &.cancel {
        height: 44px;
        margin-right: 15px;
        @include set-text(bold, 13, rgba($color: $sp-sky-blue-500, $alpha: 1));
        border: 2px solid rgba($color: $sp-sky-blue-500, $alpha: 1);
      }
    @if $addClass {
        &.#{$addClass} {
          height: 44px;
          @include set-text(bold, 13, rgba($color: $sp-teriary, $alpha: 1));
          border: 2px solid rgba($color: $sp-teriary, $alpha: 1);
        }
      }
    }
  }
}

@function pxtopercent($target, $parent: 16) {
  @return percentage($target / $parent);
}

// 미디어 쿼리 
@mixin desktop-small($small:$breakpoint-small, $medium:$breakpoint-medium) {
  @media (min-width: #{$small}) and (max-width: #{$medium}) {
    @content;
  }
}

@mixin desktop-medium {
  @media (min-width: #{$breakpoint-medium + 1px }) and (max-width: #{$breakpoint-large }) {
    @content;
  }
}

@mixin desktop-large {
  @media (min-width: #{$breakpoint-large + 1px}) {
    @content;
  }
}
